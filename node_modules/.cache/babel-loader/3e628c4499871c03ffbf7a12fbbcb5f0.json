{"ast":null,"code":"var _jsxFileName = \"/Users/ashleysaleem-west/Documents/GitHub/headless-shopify/src/context/shopContext.js\";\nimport React, { Component } from 'react';\nimport Client from 'shopify-buy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShopContext = /*#__PURE__*/React.createContext();\nconst client = Client.buildClient({\n  // domain: process.env.REACT_APP_SHOPIFY_DOMAIN,\n  // storefrontAccessToken: process.env.REACT_APP_SHOPIFY_API,\n  domain: 'asw-primary.myshopify.com',\n  storefrontAccessToken: '752969cd5b91da6eab77ab7b85d0833d'\n});\n\nclass ShopProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      product: {},\n      products: [],\n      checkout: {},\n      isCartOpen: false,\n      isMenuOpen: false\n    };\n\n    this.createCheckout = async () => {\n      const checkout = await client.checkout.create();\n      localStorage.setItem(\"checkout_id\", checkout.id);\n      this.setState({\n        checkout: checkout\n      });\n    };\n\n    this.fetchCheckout = checkoutId => {\n      client.checkout.fetch(checkoutId).then(checkout => {\n        this.setState({\n          checkout: checkout\n        });\n      });\n    };\n\n    this.addItemToCheckout = async (variantId, quantity) => {\n      const lineItemsToAdd = [{\n        variantId,\n        quantity: parseInt(quantity, 10)\n      }];\n      const checkout = await client.checkout.addLineItems(this.state.checkout.id, lineItemsToAdd);\n      this.setState({\n        checkout: checkout\n      });\n      this.openCart();\n    };\n\n    this.removeLineItem = async itemId => {\n      client.checkout.removeLineItems(checkoutId, lineItemIdsToRemove).then(checkout => {\n        // Do something with the updated checkout\n        console.log(checkout.lineItems); // Checkout with line item 'Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0Lzc4NTc5ODkzODQ=' removed\n      });\n    };\n\n    this.fetchAllProducts = async () => {\n      const products = await client.product.fetchAll();\n      this.setState({\n        products: products\n      });\n    };\n\n    this.fetchProductWithHandle = async handle => {\n      const product = await client.product.fetchByHandle(handle);\n      this.setState({\n        product: product\n      });\n    };\n\n    this.closeCart = () => {\n      this.setState({\n        isCartOpen: false\n      });\n    };\n\n    this.openCart = () => {\n      this.setState({\n        isCartOpen: true\n      });\n    };\n\n    this.closeMenu = () => {};\n\n    this.openMenu = () => {};\n  }\n\n  componentDidMount() {\n    if (localStorage.checkout_id) {\n      this.fetchCheckout(localStorage.checkout_id);\n    }\n\n    this.createCheckout();\n  }\n\n  render() {\n    console.log(this.state.checkout);\n    return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n      value: { ...this.state,\n        fetchAllProducts: this.fetchAllProducts,\n        fetchProductWithHandle: this.fetchProductWithHandle,\n        addItemToCheckout: this.addItemToCheckout,\n        removeLineItem: this.removeLineItem,\n        closeCart: this.closeCart,\n        openCart: this.openCart,\n        closeMenu: this.openMenu,\n        openMenu: this.openMenu\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ShopConsumer = ShopContext.Consumer;\nexport { ShopConsumer, ShopContext };\nexport default ShopProvider;","map":{"version":3,"sources":["/Users/ashleysaleem-west/Documents/GitHub/headless-shopify/src/context/shopContext.js"],"names":["React","Component","Client","ShopContext","createContext","client","buildClient","domain","storefrontAccessToken","ShopProvider","state","product","products","checkout","isCartOpen","isMenuOpen","createCheckout","create","localStorage","setItem","id","setState","fetchCheckout","checkoutId","fetch","then","addItemToCheckout","variantId","quantity","lineItemsToAdd","parseInt","addLineItems","openCart","removeLineItem","itemId","removeLineItems","lineItemIdsToRemove","console","log","lineItems","fetchAllProducts","fetchAll","fetchProductWithHandle","handle","fetchByHandle","closeCart","closeMenu","openMenu","componentDidMount","checkout_id","render","props","children","ShopConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Client from 'shopify-buy';\n\nconst ShopContext = React.createContext();\n\nconst client = Client.buildClient({\n  // domain: process.env.REACT_APP_SHOPIFY_DOMAIN,\n  // storefrontAccessToken: process.env.REACT_APP_SHOPIFY_API,\n  domain: 'asw-primary.myshopify.com',\n  storefrontAccessToken: '752969cd5b91da6eab77ab7b85d0833d'\n});\n\n\n\nclass ShopProvider extends Component {\n\n  state = {\n    product: {},\n    products: [],\n    checkout: {},\n    isCartOpen: false,\n    isMenuOpen: false,\n  }\n  \n  componentDidMount() {\n    if (localStorage.checkout_id) {\n      this.fetchCheckout(localStorage.checkout_id); \n    }\n    this.createCheckout();\n  }\n\n  createCheckout = async () => {\n    const checkout = await client.checkout.create();\n    localStorage.setItem(\"checkout_id\", checkout.id);\n    this.setState({ checkout: checkout });\n  }\n\n  fetchCheckout = (checkoutId) => {\n    client.checkout.fetch(checkoutId)\n      .then((checkout) => {\n        this.setState({ checkout: checkout })\n      })\n  }\n\n  addItemToCheckout = async (variantId, quantity) => {\n    const lineItemsToAdd = [\n      {\n        variantId,\n        quantity: parseInt(quantity, 10)\n      }\n    ]\n    const checkout = await client.checkout.addLineItems(this.state.checkout.id, lineItemsToAdd)\n    this.setState({ checkout: checkout })\n    this.openCart()\n  }\n\n  removeLineItem = async (itemId) => {\n    client.checkout.removeLineItems(checkoutId, lineItemIdsToRemove).then((checkout) => {\n      // Do something with the updated checkout\n      console.log(checkout.lineItems); // Checkout with line item 'Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0Lzc4NTc5ODkzODQ=' removed\n    });    \n  }\n\n  fetchAllProducts = async () => {\n    const products = await client.product.fetchAll();\n    this.setState({ products: products })\n  }\n\n  fetchProductWithHandle = async (handle) => {\n    const product = await client.product.fetchByHandle(handle);\n    this.setState({ product: product })\n  }\n\n  closeCart = () => { this.setState({isCartOpen: false}) }\n\n  openCart = () => { this.setState({isCartOpen: true}) }\n\n  closeMenu = () => {}\n\n  openMenu = () => {}\n\n  render() {\n\n    console.log(this.state.checkout)\n\n    return ( \n      <ShopContext.Provider \n        value={{\n          ...this.state,\n          fetchAllProducts: this.fetchAllProducts,\n          fetchProductWithHandle: this.fetchProductWithHandle,\n          addItemToCheckout: this.addItemToCheckout,\n          removeLineItem: this.removeLineItem,\n          closeCart: this.closeCart,\n          openCart: this.openCart,\n          closeMenu: this.openMenu,\n          openMenu: this.openMenu,\n        }}>\n        { this.props.children} \n      </ShopContext.Provider>\n    )\n  }\n}\n\nconst ShopConsumer = ShopContext.Consumer\n\nexport { ShopConsumer, ShopContext }\n\nexport default ShopProvider"]},"metadata":{},"sourceType":"module"}